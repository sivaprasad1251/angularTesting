{"ast":null,"code":"import _asyncToGenerator from \"/home/siva/Desktop/angtraining/angularTesting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { TicketReservationComponent } from './ticket-reservation.component';\ndescribe('TicketReservationComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [TicketReservationComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(TicketReservationComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\ndescribe('Ticket Reservation', () => {\n  //Arrange \n  let Reservation;\n  beforeEach(() => {\n    Reservation = new TicketReservationComponent(); //to reduce redundency we write it for each test case\n  });\n  afterEach(() => {\n    Reservation = null;\n  });\n  beforeAll(() => {});\n  afterAll(() => {});\n  /* it('testing for reservation done or not ' ,()=>{\n     //Arrange\n     let Reservation= new TicketReservationComponent();\n         //Act\n     let isReserved = Reservation.reserveSeat();\n         //assert\n     expect(isReserved).toBeTruthy();\n   })*/\n\n  it('Reserve & Increment the people count by 1 ', () => {\n    //Arrange\n    //let Reservation= new TicketReservationComponent(); \n    //Act\n    let peopcount = Reservation.reserveSeat(); //Assert \n\n    expect(peopcount).toEqual(21);\n  });\n  it('cancel & decrement the people count by 1 ', () => {\n    //Arrange\n    //let Reservation= new TicketReservationComponent();\n    //Act\n    let peopcount = Reservation.cancelSeat(); //Assert \n\n    expect(peopcount).toEqual(19);\n  });\n});","map":{"version":3,"sources":["/home/siva/Desktop/angtraining/angularTesting/src/app/ticket-reservation/ticket-reservation.component.spec.ts"],"names":[],"mappings":";AAAA,SAA2B,OAA3B,QAA0C,uBAA1C;AAEA,SAAS,0BAAT,QAA2C,gCAA3C;AAEA,QAAQ,CAAC,4BAAD,EAA+B,MAAK;AAC1C,MAAI,SAAJ;AACA,MAAI,OAAJ;AAEA,EAAA,UAAU,iCAAC,aAAW;AACpB,UAAM,OAAO,CAAC,sBAAR,CAA+B;AACnC,MAAA,YAAY,EAAE,CAAE,0BAAF;AADqB,KAA/B,EAGL,iBAHK,EAAN;AAID,GALS,EAAV;AAOA,EAAA,UAAU,CAAC,MAAK;AACd,IAAA,OAAO,GAAG,OAAO,CAAC,eAAR,CAAwB,0BAAxB,CAAV;AACA,IAAA,SAAS,GAAG,OAAO,CAAC,iBAApB;AACA,IAAA,OAAO,CAAC,aAAR;AACD,GAJS,CAAV;AAMA,EAAA,EAAE,CAAC,eAAD,EAAkB,MAAK;AACvB,IAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,UAAlB;AACD,GAFC,CAAF;AAGD,CApBO,CAAR;AAsBA,QAAQ,CAAC,oBAAD,EAAuB,MAAI;AAEjC;AACA,MAAI,WAAJ;AAEA,EAAA,UAAU,CAAC,MAAK;AAEd,IAAA,WAAW,GAAE,IAAI,0BAAJ,EAAb,CAFc,CAEiC;AAChD,GAHS,CAAV;AAKA,EAAA,SAAS,CAAC,MAAI;AAEX,IAAA,WAAW,GAAE,IAAb;AAEF,GAJQ,CAAT;AAMA,EAAA,SAAS,CAAC,MAAI,CAAG,CAAR,CAAT;AAEA,EAAA,QAAQ,CAAC,MAAI,CAAG,CAAR,CAAR;AAMD;;;;;;;;;AAWC,EAAA,EAAE,CAAC,4CAAD,EAA+C,MAAI;AACnD;AACA;AAEA;AACA,QAAI,SAAS,GAAG,WAAW,CAAC,WAAZ,EAAhB,CALmD,CAOnD;;AACA,IAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,OAAlB,CAA0B,EAA1B;AACA,GATA,CAAF;AAWC,EAAA,EAAE,CAAC,2CAAD,EAA8C,MAAI;AACnD;AACA;AAEA;AACA,QAAI,SAAS,GAAG,WAAW,CAAC,UAAZ,EAAhB,CALmD,CAOnD;;AACA,IAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,OAAlB,CAA0B,EAA1B;AACA,GATC,CAAF;AAYF,CA1DO,CAAR","sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { TicketReservationComponent } from './ticket-reservation.component';\n\ndescribe('TicketReservationComponent', () => {\n  let component: TicketReservationComponent;\n  let fixture: ComponentFixture<TicketReservationComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ TicketReservationComponent ]\n    })\n    .compileComponents();\n  });\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(TicketReservationComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n\ndescribe('Ticket Reservation', ()=>{\n\n  //Arrange \n  let Reservation: TicketReservationComponent;\n  \n  beforeEach(() => { //beforeEach used for initialize or setup\n    \n    Reservation= new TicketReservationComponent(); //to reduce redundency we write it for each test case\n  })\n\n  afterEach(()=> { // nullfy every test case after completion\n    \n     Reservation= null;\n    \n  })\n  \n  beforeAll(()=> {})\n\n  afterAll(()=> {})\n\n\n\n\n\n /* it('testing for reservation done or not ' ,()=>{\n    //Arrange\n    let Reservation= new TicketReservationComponent();\n\n    //Act\n    let isReserved = Reservation.reserveSeat();\n\n    //assert\n    expect(isReserved).toBeTruthy();\n  })*/\n\n  it('Reserve & Increment the people count by 1 ' ,()=>{\n    //Arrange\n    //let Reservation= new TicketReservationComponent(); \n\n    //Act\n    let peopcount = Reservation.reserveSeat();\n\n    //Assert \n    expect(peopcount).toEqual(21);\n   })\n\n   it('cancel & decrement the people count by 1 ' ,()=>{\n    //Arrange\n    //let Reservation= new TicketReservationComponent();\n\n    //Act\n    let peopcount = Reservation.cancelSeat();\n\n    //Assert \n    expect(peopcount).toEqual(19);\n   })\n\n\n})"],"sourceRoot":""},"metadata":{},"sourceType":"module"}